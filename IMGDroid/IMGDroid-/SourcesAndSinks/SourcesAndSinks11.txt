%<java.net.URL: java.io.InputStream openStream()> -> _SOURCE_
<java.net.URLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()> -> _SOURCE_
<java.net.HttpURLConnection: java.io.InputStream getInputStream()> -> _SOURCE_

<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> -> _SOURCE_
<java.net.URL: java.net.URLConnection openConnection()> -> _SOURCE_
<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> -> _SOURCE_

%okhttp3
<okhttp3.Call: okhttp3.Response execute()> -> _SOURCE_
<okhttp3.Call: void enqueue(okhttp3.Callback)> -> _SOURCE_
<okhttp3.Callback: void onResponse(okhttp3.Call,okhttp3.Response)> -> _SOURCE_
<okhttp3.Callback: void onFailure(okhttp3.Call,java.io.IOException)> -> _SOURCE_
<okhttp3.Response: okhttp3.ResponseBody body()> -> _SOURCE_
<okhttp3.ResponseBody: java.io.Reader charStream()> -> _SOURCE_
<okhttp3.ResponseBody: java.io.InputStream byteStream()> -> _SOURCE_

%okhttp
%<com.squareup.okhttp.Call: com.squareup.okhttp.Response execute()> -> _SOURCE_
%<com.squareup.okhttp.Call: void enqueue(com.squareup.okhttp.Callback)> -> _SOURCE_
%<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()> -> _SOURCE_
%<com.squareup.okhttp.ResponseBody: java.io.InputStream byteStream()> -> _SOURCE_

%retrofit2
<retrofit2.Call: retrofit2.Response execute()> -> _SOURCE_
<retrofit2.Call: void enqueue(retrofit2.Callback)> -> _SOURCE_
<retrofit2.Response: java.lang.Object body()> -> _SOURCE_

%volley
<com.android.volley.RequestQueue: com.android.volley.Request add(com.android.volley.Request)> -> _SOURCE_
<com.android.volley.toolbox.RequestFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCE_
<com.android.volley.Response: com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry)> -> _SOURCE_
<com.android.volley.Response: com.android.volley.Response error(com.android.volley.VolleyError)> -> _SOURCE_

%glide
<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(android.net.Uri)> -> _SOURCE_
<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.String)> -> _SOURCE_

%picasso
<com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(java.lang.String)> -> _SOURCE_
<com.squareup.picasso.Picasso: com.squareup.picasso.RequestCreator load(android.net.Uri)> -> _SOURCE_

%ImageLoader
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageSize)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener)> -> _SOURCE_
<com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)> -> _SOURCE_

%reactivex
%<io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer)> -> _SOURCE_
%<io.reactivex.Single: io.reactivex.disposables.Disposable subscribe(io.reactivex.functions.Consumer, io.reactivex.functions.Consumer)> -> _SOURCE_
%<io.reactivex.Single: void subscribe(io.reactivex.SingleObserver)> -> _SOURCE_
%<io.reactivex.Single: io.reactivex.Single doOnSuccess(io.reactivex.functions.Consumer)> -> _SOURCE_
%<io.reactivex.Single: io.reactivex.Single doOnError(io.reactivex.functions.Consumer)> -> _SOURCE_
%<io.reactivex.Single: io.reactivex.Single flatMap(io.reactivex.functions.Function)> -> _SOURCE_

%bridge
%<com.afollestad.bridge.Bridge: com.afollestad.bridge.RequestBuilder get(java.lang.String,java.lang.Object[])> -> _SOURCE_
%<com.afollestad.bridge.Response: byte[] asBytes()> -> _SOURCE_
%<com.afollestad.bridge.Response: java.lang.String asString()> -> _SOURCE_
%<com.afollestad.bridge.Response: android.text.Spanned asHtml()> -> _SOURCE_
%<com.afollestad.bridge.Response: android.graphics.Bitmap asBitmap()> -> _SOURCE_
%<com.afollestad.bridge.Response: org.json.JSONObject asJsonObject()> -> _SOURCE_
%<com.afollestad.bridge.Response: org.json.JSONArray asJsonArray()> -> _SOURCE_
%<com.afollestad.bridge.Response: void asFile(java.io.File)> -> _SOURCE_
%<com.afollestad.bridge.Response: java.lang.Object asClass(java.lang.Class)> -> _SOURCE_
%<com.afollestad.bridge.Response: java.lang.Object[] asClassArray(java.lang.Class)> -> _SOURCE_
%<com.afollestad.bridge.Response: java.lang.Object asSuggested()> -> _SOURCE_